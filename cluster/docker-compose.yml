version: "3"

services:
  #
  # RabbitMQ cluster of 3 nodes
  #
  rabbitmq-01:
    container_name: rabbitmq-01
    build: ../rabbitmq/.
    hostname: rabbitmq-01
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
  rabbitmq-02:
    container_name: rabbitmq-02
    build: ../rabbitmq/.
    hostname: rabbitmq-02
    links:
      - rabbitmq-01
    depends_on:
      - rabbitmq-01
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
    volumes:
      - ../rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
  rabbitmq-03:
    container_name: rabbitmq-03
    build: ../rabbitmq/.
    hostname: rabbitmq-03
    links:
      - rabbitmq-01
    depends_on:
      - rabbitmq-01
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
    volumes:
      - ../rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  #
  # Keycloak with Postgres
  #
  # postgres:
  #   container_name: postgres-01
  #   image: postgres
  #   hostname: postgres-01
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: password
  keycloak:
    container_name: keycloak-01
    image: jboss/keycloak
    hostname: keycloak-01
    environment:
      # DB_VENDOR: POSTGRES
      # DB_ADDR: postgres
      # DB_DATABASE: keycloak
      # DB_USER: keycloak
      # DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    # depends_on:
    #   - postgres

  #
  #  WEB UI
  #
  nginx-01:
    container_name: nginx-01
    build: ../nginx/.
    volumes:
      - ../nginx/app:/usr/share/nginx/html:ro
    restart: unless-stopped

  nginx-02:
    container_name: nginx-02
    build: ../nginx/.
    volumes:
      - ../nginx/app:/usr/share/nginx/html:ro
    restart: unless-stopped

  #
  # WEB UI React
  #
  app:
    container_name: app
    build: ../app/.
    hostname: app
    volumes:
      - "../app:/usr/src/app"
      - "/usr/src/app/node_modules"
    environment:
      - NODE_ENV=development

  #
  # HAPROXY Single node
  #
  proxy:
    container_name: haproxy
    build: ../haproxy/.
    hostname: pxy
    # volumes:
    #   - ../haproxy/config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitmq-01
      - rabbitmq-02
      - rabbitmq-03
      - app
      - keycloak
      - nginx-01
      - nginx-02
    ports:
      - "9090:9090"
      - "15672:15672"
      - "15674:15674"
      - "80:80"
      - "81:81"
      - "8090:8090"
      # - "443:443"
      # - "8080:8080"
      - "1883:1883"
      - "5672:5672"

#
# Data volumes
#
volumes:
  postgres_data:
    driver: local
    # networks:
#   default:
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: 172.28.0.1/16
